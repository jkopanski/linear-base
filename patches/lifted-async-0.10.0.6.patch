diff --git a/src/Control/Concurrent/Async/Lifted.hs b/src/Control/Concurrent/Async/Lifted.hs
index 073f533..061a0e8 100644
--- a/src/Control/Concurrent/Async/Lifted.hs
+++ b/src/Control/Concurrent/Async/Lifted.hs
@@ -448,7 +448,7 @@ instance MonadBaseControl IO m => Applicative (Concurrently m) where
     Concurrently $ uncurry ($) <$> concurrently fs as
 
 instance MonadBaseControl IO m => Alternative (Concurrently m) where
-  empty = Concurrently $ liftBaseWith $ const (forever $ threadDelay maxBound)
+  empty = Concurrently $ liftBaseWith $ \_ -> forever $ threadDelay maxBound
   Concurrently as <|> Concurrently bs =
     Concurrently $ either id id <$> race as bs
 
diff --git a/src/Control/Concurrent/Async/Lifted/Safe.hs b/src/Control/Concurrent/Async/Lifted/Safe.hs
index 564f4e7..bd8bb08 100644
--- a/src/Control/Concurrent/Async/Lifted/Safe.hs
+++ b/src/Control/Concurrent/Async/Lifted/Safe.hs
@@ -432,7 +432,7 @@ instance (MonadBaseControl IO m, Forall (Pure m)) =>
 
 instance (MonadBaseControl IO m, Forall (Pure m)) =>
   Alternative (Concurrently m) where
-    empty = Concurrently $ liftBaseWith $ const (forever $ threadDelay maxBound)
+    empty = Concurrently $ liftBaseWith $ \_ -> forever $ threadDelay maxBound
     Concurrently (as :: m a) <|> Concurrently bs =
       Concurrently (either id id <$> race as bs)
         \\ (inst :: Forall (Pure m) :- Pure m a)
